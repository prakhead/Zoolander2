---
- hosts: localhost
  become: yes
  vars:
    cache_mem_size: 4096m
    cache_disk_size: 500000m
    proxy_ip_address: 192.168.128.160 
    upstream_dns: 8.8.8.8
    repo: lancache 
    # or older style repo: steamcache
  tasks:
  - name: Remove existing docker packages (if any)
    package: 
      name: "{{ item }}"
      state: absent
    loop:
    - docker
    - docker-engine
    - docker.io

  - name: Install supporting packages
    package: 
      name: "{{ item }}"
      state: present
    loop:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
    - vim
    - tmux
    - nano
    - htop
    - iftop

  - name: Add key for docker repository
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add docker repository
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
      state: present

  - name: Add docker packages
    apt: 
      name: "{{ item }}"
      state: present
      update_cache: yes
    loop:
    - docker-ce
    - python-docker
    
  - name: customise global tmux.conf to switch prefix to CTRL-a
    lineinfile: 
      dest: /etc/tmux.conf
      line: "unbind C-b"
      create: yes
      
  - name: customise global tmux.conf to switch prefix to CTRL-a (2)
    lineinfile:
      dest: /etc/tmux.conf
      line: "set -g prefix C-a"
      insertafter: "unbind C-b"
      
  - name: Customise global tmux.conf to support 256 colours
    lineinfile:
      dest: /etc/tmux.conf 
      line: 'set -g default-terminal "screen-256color"'
    
  - name: Customise global tmux.conf to start counting window numbers from 1 rather than 0
    lineinfile:
      dest: /etc/tmux.conf 
      line: 'set -g base-index 1'
      insertafter: EOF
    
  - name: Customise global tmux.conf to start counting pane numbers from 1 rather than 0
    lineinfile:
      dest: /etc/tmux.conf
      line: 'setw -g pane-base-index 1'
      insertafter: EOF
      
  - name: Get current username
    local_action: command whoami
    register: running_user_name
    become: no

  - name: Add user to docker group
    user:
      name: "{{ running_user_name.stdout }}"
      group: docker
      append: yes
      
  - name: Print reminder about running newgrp
    debug:
      msg: "Run `newgrp -` to re-initialise user env for new group membership"
     
  - name: Update containers
    docker_image: 
      name: "{{ item }}"
      source: pull
      force_source: yes
    loop: 
      - steamcache/generic:latest
      - steamcache/sniproxy:latest
      - steamcache/steamcache-dns:latest
    when: repo == "steamcache"

  - name: Run steamcache container
    docker_container: 
      name: steamcache
      image: steamcache/generic:latest
      ports:
        - 80:80
      restart_policy: unless-stopped
      volumes:
      - /cache/steam/data:/data/cache
      - /cache/steam/logs:/data/logs
      env:
        CACHE_MEM_SIZE: "{{ cache_mem_size }}" 
        CACHE_DISK_SIZE: "{{ cache_disk_size }}"
    when: repo == "steamcache"

  - name: Run sniproxy container
    docker_container:
      name: sniproxy
      image: steamcache/sniproxy:latest
      restart_policy: unless-stopped
      ports: 
        - 443:443
    when: repo == "steamcache"
         
  - name: Run dns proxy container
    docker_container:
      name: steamcache-dns
      image: steamcache/steamcache-dns:latest
      restart_policy: unless-stopped
      ports: 
      - "{{ proxy_ip_address }}:53:53/udp"
      env: 
        STEAMCACHE_IP: "{{ proxy_ip_address }}"
        UPSTEAM_DNS: "{{ upstream_dns }}"
    when: repo == "steamcache"

  - name: Update containers
    docker_image:
      name: "{{ item }}"
      source: pull
      force_source: yes
    loop:
      - lancachenet/monolithic:latest
      - lancachenet/sniproxy:latest
      - lancachenet/lancache-dns:latest
    when: repo == "lancache"

  - name: Run lancache container
    docker_container: 
      name: lancache
      image: lancachenet/monolithic:latest
      ports:
        - 80:80
      restart_policy: unless-stopped
      volumes:
      - /cache/steam/data:/data/cache
      - /cache/steam/logs:/data/logs
      env:
        CACHE_MEM_SIZE: "{{ cache_mem_size }}" 
        CACHE_DISK_SIZE: "{{ cache_disk_size }}"
    when: repo == "lancache"

  - name: Run sniproxy container
    docker_container:
      name: sniproxy
      image: lancachenet/sniproxy:latest
      restart_policy: unless-stopped
      ports: 
        - 443:443
    when: repo == "lancache"
         
  - name: Run dns proxy container
    docker_container:
      name: lancache-dns
      image: lancachenet/lancache-dns:latest
      restart_policy: unless-stopped
      ports: 
      - "{{ proxy_ip_address }}:53:53/udp"
      env: 
        LANCACHE_IP: "{{ proxy_ip_address }}"
        UPSTEAM_DNS: "{{ upstream_dns }}"
        USE_GENERIC_CACHE: "true"
    when: repo == "lancache"

  - name: Install samba
    package:
      name: "{{ item }}"
      state: present
    loop:
    - samba
    - samba-common

  - name: Make share directory
    file:
      path: /share
      owner: nobody
      group: nogroup
      mode : 0777
      state: directory

  - name: Copy samba config file
    copy:
      src: smb.conf
      dest: /etc/samba/smb.conf
      backup: yes
      mode: 0644
      owner: root
      group: root
    notify: Restart samba service

  handlers:
  - name: Restart samba service
    service: 
      name: smbd
      state: restarted
